(define $sact
  (memoized-lambda [$n]
    (if (eq? n 0)
      0
      (+ n (sact (- n 1))))))

(define $sacts (map sact nats))

(define $proc1
  (lambda [$n]
    (foldl * 1 (map (lambda [$a $b] (+ b 1)) (frequency (p-f n))))))

(define $rets (map proc1 sacts))

(test (sact (+ 1 (length (while (lt? $ 100) rets)))))
(test (sact (+ 1 (length (while (lt? $ 500) rets)))))

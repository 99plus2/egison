(define $proc2
  (memoized-lambda [$d]
    (foldl + (neg d)
           (unique (match-all (p-f d) (multiset integer)
                     [<join $ps _> (foldl * 1 ps)])))))

(define $proc1
  (memoized-lambda [$d]
    (if (eq? d (proc2 d))
      #f
      (eq? d (proc2 (proc2 d))))))

(define $main
  (lambda [$arg]
    (do {[(each print (filter proc1 (take 10000 nats)))]}
      [])))
;(test (foldl + 0 (filter proc1 (take 10000 nats))))

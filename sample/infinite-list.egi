(define $nat {1 @(map (+ $ 1) nat)})

(define $take
  (lambda [$n $ls]
    (if (eq? n 0)
        {}
        {(car ls) @(take (- n 1) (cdr ls))})))

(test (take 10 (match-all nat (set integer)
                 [<cons $m <cons $n _>> [m n]])))

(test (take 10 (match-all nat (list integer)
                 [<join _ <cons $m <join _ <cons $n _>>>> [m n]])))

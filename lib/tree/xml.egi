(define $xml
  (matcher
    {[,$val []
      {[$tgt (match [val tgt] [xml xml]
               {[[<leaf $tag $text> <leaf ,tag ,text>] {[]}]
                [[<lnode $tag $xs> <lnode ,tag ,xs>] {[]}]
                [[_ _] {}]})]}]
     [<leaf $ $> string
      {[<Leaf $tag $text> {[tag text]}]
       [_ {}]}]
     [<lnode $ $> [string (list xml)]
      {[<Node $tag $cs> {[tag cs]}]
       [_ {}]}]
     [<mnode $ $> [string (multiset xml)]
      {[<Node $tag $cs> {[tag cs]}]
       [_ {}]}]
     [<ldescendant $> xml
      {[$x {x @(all-descendant x)}]}]
     [<mdescendant $> xml
      {[$x {x @(all-descendant x)}]}]
     [<ldescendants $> (list xml)
      {[$x {{x} @(all-descendants x)}]}]
     [<mdescendants $> (multiset xml)
      {[$x {{x} @(all-descendants x)}]}]
     [$ [something]
      {[$tgt {tgt}]}]
     }))

(define $all-descendants
  (lambda [$x]
    (match x xml
      {[<leaf _ _> {}]
       [<lnode _ $cs> {cs @(concat (map all-descendants cs))}]})))

(define $all-descendant
  (lambda [$x]
    (match x xml
      {[<leaf _ _> {}]
       [<lnode _ $cs> {@cs @(concat (map all-descendant cs))}]})))

;;;
;;; graph.egi
;;;

(define $nodeInfo
  (lambda [$a]
    (algebraic-data-matcher
      {<node a (multiset a) (multiset a)>})))

(define $graph
  (lambda [$a]
    (multiset (nodeInfo a))))

(define $all-paths
  (pattern-function [$s $e $rest]
    undefined))

(define $hamilton-cycle
  (pattern-function [$h]
    (& $g
       <cons <node $h_1 <cons $h_2 _> _>
               (loop $i (between 3 (size g))
                     <cons <node ,h_(- i 1) <cons $h_i _> _>
                           ...>
                     <cons <node ,h_(size g) <cons ,h_1 _> _>
                           _>)>
       )))

(define $hamilton-path
  (pattern-function [$h]
    (& $g
       <cons <node $h_1 <cons $h_2 _> _>
             (loop $l $i (between 3 n)
                   <cons <node ,h_(- i 1) <cons $h_i _> _>
                         ...>
                   <cons <node ,h_n _ _>
                         <nil>>)>
       )))
